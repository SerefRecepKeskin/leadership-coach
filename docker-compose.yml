version: '3.8'

services:
  # --- Milvus Vector Database Services ---
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.0
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - leadership-network
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2020-12-03T00-03-10Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    networks:
      - leadership-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.4.5
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
    depends_on:
      etcd:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - leadership-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 30s

  # --- Data Processing Services ---
  content-harvester:
    build:
      context: ./leadership-content-harvester
    environment:
      - MILVUS_URI=http://milvus:19530
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/data:/app/data
    depends_on:
      milvus:
        condition: service_healthy
    networks:
      - leadership-network
    # This service should run and exit once data is loaded
    restart: "no"
    command: ["python", "main.py"]

  # --- Backend Services ---
  coach-engine:
    build:
      context: ./leadership-coach-engine
    ports:
      - "5006:5006"
    environment:
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      # Add other necessary environment variables for the engine
    depends_on:
      content-harvester:
        condition: service_completed_successfully
    networks:
      - leadership-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5006/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # --- Frontend Services ---
  coach-ui:
    build:
      context: ./leadership-coach-ui
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://coach-engine:5006
      # Add other necessary environment variables for the UI
    depends_on:
      coach-engine:
        condition: service_healthy
    networks:
      - leadership-network

networks:
  leadership-network:
    driver: bridge

volumes:
  milvus_data:
  content_data:
